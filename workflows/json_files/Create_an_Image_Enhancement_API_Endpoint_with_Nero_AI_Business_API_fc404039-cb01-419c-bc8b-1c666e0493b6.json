{
  "meta": {
    "instanceId": "a6e279c50a7024b3eb450d8593ec3a4b5453fd5a8763f02c0bc267684a7d6963"
  },
  "nodes": [
    {
      "id": "971a6566-192d-4ad8-acc1-e9e2f629151f",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -40,
        0
      ],
      "webhookId": "c9795945-7dbb-45cb-9082-d3629f15504a",
      "parameters": {
        "path": "c9795945-7dbb-45cb-9082-d3629f15504a",
        "options": {},
        "httpMethod": "POST",
        "responseMode": "responseNode"
      },
      "typeVersion": 2
    },
    {
      "id": "faef3c56-cfd9-407e-8118-8b41d8864c36",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1160,
        0
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1.3
    },
    {
      "id": "a30aaef1-8761-4b49-9b92-68922593feac",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        440,
        0
      ],
      "webhookId": "59a2e9e4-6c03-4672-815f-9c9093ce0828",
      "parameters": {
        "amount": 2
      },
      "typeVersion": 1.1
    },
    {
      "id": "63bb4342-5d24-43c3-b632-5946cdc4c64b",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        880,
        0
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "e2dbf1c1-d68c-4202-acf9-dab4624281f3",
              "operator": {
                "type": "number",
                "operation": "equals"
              },
              "leftValue": "={{ $json.code }}",
              "rightValue": 0
            },
            {
              "id": "bc499e4c-8eed-40d8-b09f-eb57df6d301f",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "done"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "9ef7adc4-43cc-4e28-ad21-04681e5d3587",
      "name": "Create task",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        220,
        0
      ],
      "parameters": {
        "url": "https://ai.nero.com/biz/api/task",
        "method": "POST",
        "options": {},
        "jsonBody": "{\n    \"type\": \"FaceDetection\",\n    \"body\": {\n        \"images\": [\n            \"https://image.url\"\n        ]\n    }\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "x-neroai-api-key",
              "value": "your API key"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "17fd191a-de94-42ca-9bb3-e79aeca82f03",
      "name": "Query task status",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        660,
        0
      ],
      "parameters": {
        "url": "https://ai.nero.com/biz/api/task",
        "options": {},
        "sendQuery": true,
        "sendHeaders": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "task_id",
              "value": "={{ $json.data.task_id }}"
            }
          ]
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "x-neroai-api-key",
              "value": "your API key"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "ddf31898-d972-41ca-a6bb-552fdb07997b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        280,
        -460
      ],
      "parameters": {
        "width": 620,
        "height": 140,
        "content": "## Create an AI task API endpoint\n\nIn this workflow we show how to create an AI task API endpoint with `Webhook` and `Respond to Webhook` nodes"
      },
      "typeVersion": 1
    },
    {
      "id": "08f7c363-1e06-4f4e-b1ee-60d6d43d6bf7",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        280,
        -300
      ],
      "parameters": {
        "width": 620,
        "height": 240,
        "content": "### How to use it\n1. Apply for an API key from https://ai.nero.com/business\n2. Fill your key into the `Create task` and `Query task status` nodes\n3. Select an AI service and modify `Create task` node parameters, the API doc: https://ai.nero.com/ai-api/docs\n4. Execute the workflow so that the webhook starts listening\n5. Make a test request by postman or other tools, the test URL from the `Webhook` node\n\nYou will receive the output in the webhook response."
      },
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Query task status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Create task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create task": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query task status": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}