{
  "id": "q07AalYfXfiMc0p2",
  "meta": {
    "instanceId": "2b69b24ad1a51b447e1a0d6f8c70b16aca715ccfaf123eb531f92865766fce1c",
    "templateCredsSetupCompleted": true
  },
  "name": "Medical Q&A Assistant for Urology using RAG with Pinecone and GPT-4o",
  "tags": [],
  "nodes": [
    {
      "id": "58bf7bd0-00c7-4d7a-98f3-e18d053afa9f",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        100,
        -20
      ],
      "webhookId": "27dd7366-236c-4050-9fe0-575818987a21",
      "parameters": {
        "public": true,
        "options": {},
        "initialMessages": "Dr. Hiep - Urologist - Phone: 090xxxxxxx\nInformation provided by a certified urologist\n\n"
      },
      "typeVersion": 1.1
    },
    {
      "id": "6f689a95-9b4b-45c1-b407-023b05610ed9",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        540,
        -20
      ],
      "parameters": {
        "text": "=Input content: {{ $json.chatInput }}",
        "options": {
          "systemMessage": "=You are an AI expert specializing in Andrology and Urology.\n\nYour role is to provide user-friendly, medically relevant answers **based entirely on information gathered from the Vector Database**.\n\n‚ö†Ô∏è DO NOT create or assume any outside or fabricated information.\n\nüó£Ô∏è Tone & Style:\n- ‚úÖ Clear, simple and informative\n- üßë‚Äç‚öïÔ∏è Friendly and easy to understand for non-physician users\n- ‚ùå Avoid overly clinical or doctor-to-doctor language\n\nüìå Response guidelines:\n- Look at the information content of the previously asked KH for each answer, to synthesize information and make accurate suggestions\n- ‚ùå Do not speculate or make assumptions\n- ‚úÖ Use only verified vector-based data (collected context)\n- üìù Format your response with bullet points with emojis/symbols:\n- üìå Common causes: ...\n- üíä Symptoms may include: ...\n- ‚ö†Ô∏è Note: ...\n- üö´ DO NOT provide a treatment plan or prescription medicine\n\n‚ùìAfter answering, gently ask 1‚Äì2 follow-up questions to gather more context for the user. Avoid the stiff Q&A style ‚Äî use friendly, caring expressions such as:\n- \"Have you tried anything to relieve the discomfort?\"\n- \"Can you share how long you've had this condition?\"\nUse open-ended questions, such as: Are there any other issues that you're concerned about that we'd like you to address.\n\nLeave the customer:\n- Would you like me to summarize the issues you're describing, and send the content back to you...\nWhen the customer wants to see the doctor or make an appointment, send the information:\nüë®‚Äç‚öïÔ∏è To make an appointment, you can:\n\nContact Dr. Hiep directly, CK II - Andrology - Urology. Zalo: 0777471932\nHave information about the symptoms you are experiencing ready to help your doctor better understand your condition.\n\nüö´ If the vector data does not include relevant information:\nReply politely:\n**\"I do not have enough information to answer this question at this time. Please consider consulting another reliable source or a medical professional.\"**\n\n‚úÖ **Always end your response with a professional Call to Action (CTA):\n\nT√¥i l√† tr·ª£ l√Ω AI. ƒê·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n chuy√™n m√¥n, vui l√≤ng li√™n h·ªá v·ªõi:\nB√°c sƒ© Hi·ªáp, CK II Ti·∫øt ni·ªáu - Nam Khoa\nZalo: 0777471932\nüåê **Always reply in Vietnamese.**\n"
        },
        "promptType": "define"
      },
      "typeVersion": 1.9
    },
    {
      "id": "8e0a08fa-9063-4cce-b982-650d54b1dd68",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        460,
        200
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "ScDgXbCy0e7Omp6y",
          "name": "OpenAi account 3"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "d9399f27-3fa5-499a-89d2-d3b3aa8ff467",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        620,
        200
      ],
      "parameters": {
        "sessionKey": "={{ $json.sessionId }}",
        "sessionIdType": "customKey"
      },
      "typeVersion": 1.3
    },
    {
      "id": "6af61985-4453-48ac-9e5a-ea7e5482374a",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1100,
        480
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "ScDgXbCy0e7Omp6y",
          "name": "OpenAi account 3"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "034fea52-646f-4146-908c-e6128d1f764f",
      "name": "Answer questions with a vector store",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "position": [
        900,
        220
      ],
      "parameters": {
        "name": "Knowledge",
        "topK": 10,
        "description": "Urology & Andrology Dataset"
      },
      "typeVersion": 1
    },
    {
      "id": "4ab86662-617a-4592-b008-062ca5f9cfa7",
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "position": [
        700,
        380
      ],
      "parameters": {
        "options": {},
        "pineconeIndex": {
          "__rl": true,
          "mode": "list",
          "value": "namkhoaa2z",
          "cachedResultName": "namkhoaa2z"
        }
      },
      "credentials": {
        "pineconeApi": {
          "id": "wB3phIJE9xu2lIvy",
          "name": "PineconeApi account 2"
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "6e14d1c6-7615-4f2c-84e5-67b94d37d8c9",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        720,
        640
      ],
      "parameters": {
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "ScDgXbCy0e7Omp6y",
          "name": "OpenAi account 3"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "06831eef-7986-4b56-8eef-94180cfe9a57",
      "name": "üü¢ Trigger",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -200,
        -20
      ],
      "parameters": {
        "content": "üü¢ Trigger: Activated when a user sends a new message to the chatbot.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "671e8c95-1585-42cb-9fb7-046266b1eef9",
      "name": "üß† AI Agent Logic",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        420,
        -120
      ],
      "parameters": {
        "width": 500,
        "height": 260,
        "content": "üß† Main AI logic: Receives user input, gathers context, and generates a friendly response.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "dc0ddbe5-0025-4998-99a8-4d67c954b6da",
      "name": "ü§ñ GPT-4o Model",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        200
      ],
      "parameters": {
        "content": "ü§ñ Uses GPT-4o-mini to understand and generate conversation based on context.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "a58774f9-9b3c-4e8d-b829-77f1ba8763bf",
      "name": "üß† Session Memory",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1000,
        360
      ],
      "parameters": {
        "content": "üí¨ Renders final answer using GPT-4o-mini based on retrieved knowledge.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "2be54256-0caf-4fe5-9dbc-5ac0db5223bc",
      "name": "üìö Vector Store Search",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        560,
        160
      ],
      "parameters": {
        "content": "üß† Stores user session context to support multi-turn dialogue.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "87e3319f-a466-4e04-942f-bf32d681f32b",
      "name": "üß© Pinecone Search",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        380
      ],
      "parameters": {
        "content": "üìö Connects to the medical vector database (RAG) to search for relevant documents.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "fc8c0d2d-9975-41b0-9732-42660e648610",
      "name": "üß¨ Embeddings",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        620
      ],
      "parameters": {
        "content": "üß¨ Transforms input into embeddings for Pinecone to use in vector search.\n"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "68ff049a-9917-47de-b3a0-2edf29614efb",
  "connections": {
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  }
}