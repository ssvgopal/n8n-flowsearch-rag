{
  "id": "xc36kbxHODDBimC1",
  "meta": {
    "instanceId": "84ad02d6104594179f43f1ce9cfe3a81637b2faedb57dafcb9e649b7542988db",
    "templateCredsSetupCompleted": true
  },
  "name": "Youtube commentor",
  "tags": [],
  "nodes": [
    {
      "id": "6a95c116-f7c6-460a-97e6-1cefd90debf4",
      "name": "Check for New Video",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        0,
        0
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "2a280065-a28c-456a-abd9-9b0b1899f57f",
      "name": "Set Channel ID",
      "type": "n8n-nodes-base.set",
      "position": [
        220,
        0
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "9fb80084-4cf7-474e-af18-5957daccbf01",
              "name": "Channel 1 id",
              "type": "string",
              "value": "UC_x5XG1OV2P6uZZ5FSM9Ttw"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "5e8c588b-8d5d-4ccf-b9d3-e53374334d62",
      "name": "Fetch Latest Video",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        440,
        0
      ],
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/search",
        "options": {},
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "YOUR_API"
            },
            {
              "name": "channelId",
              "value": "={{ $json['Channel 1 id'] }}"
            },
            {
              "name": "order",
              "value": "date"
            },
            {
              "name": "maxResults",
              "value": "1"
            },
            {
              "name": "part",
              "value": "snippet"
            },
            {
              "name": "type",
              "value": "video"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "65a0a3da-106a-4017-b5f8-d27751f1fdb7",
      "name": "Commenter Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        760,
        0
      ],
      "parameters": {
        "text": "=Title: {{ $json.items[0].snippet.title }}\nDescription: {{ $json.items[0].snippet.description }}",
        "options": {
          "systemMessage": "You are a Youtube commenter. Comment on youtube based on video description and title."
        },
        "promptType": "define"
      },
      "typeVersion": 1.9
    },
    {
      "id": "15d6a657-dda7-4c71-b544-1789140072e4",
      "name": "Comment Writer",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        720,
        240
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "wYwTjEv45IzlAOAu",
          "name": "OpenAi account 2"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "c42cdc20-0b52-4a70-bb60-9700fe5b2580",
      "name": "Post Comment",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1200,
        0
      ],
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/commentThreads",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"snippet\": {\n    \"videoId\": {{ $json.items[0].id.videoId }},\n    \"topLevelComment\": {\n      \"snippet\": {\n        \"textOriginal\": {{ $json.output }}\n      }\n    }\n  }\n}",
        "sendBody": true,
        "sendQuery": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "snippet"
            }
          ]
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer Access Token"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "bf05fe2a-d11e-49a4-a1b5-bc749b3fee5c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -40,
        -580
      ],
      "parameters": {
        "color": 5,
        "width": 620,
        "height": 780,
        "content": "## 🟩 **Section 1: 🎯 Video Discovery**\n\n### Nodes:\n\n* 🕒 **Check for New Video** (Schedule Trigger)\n* ✏️ **Set Channel ID** (Edit Fields)\n* 🌐 **Fetch Latest Video** (HTTP Request)\n\n### 🔍 Description:\n\nThis group handles **detecting and fetching the latest video** from a specific YouTube channel.\n\n* **🕒 Schedule Trigger** runs at regular intervals (e.g., every hour) to check for new content.\n* **✏️ Set Channel ID** allows you to manually configure or dynamically inject the channel ID to target.\n* **🌐 Fetch Latest Video** calls the YouTube Data API (GET request) to pull metadata about the most recent upload — primarily the video ID and description.\n\n> 💡 **Purpose**: Ensures you always get the freshest video from the target channel to react to.\n\n---\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "b7c1a84c-9faf-4e95-bb95-928bf94a56fd",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        680,
        -640
      ],
      "parameters": {
        "color": 2,
        "width": 380,
        "height": 1020,
        "content": "## 🟨 **Section 2: 🤖 Comment Creation**\n\n### Nodes:\n\n* 🧠 **Generate Comment** (AI Agent)\n* 🧾 **Comment Writer Model** (OpenAI Chat Model)\n\n### ✍️ Description:\n\nThis is where the **magic happens** — the AI reads the video’s description and writes a relevant, engaging comment.\n\n* **🧠 Generate Comment (AI Agent)** acts as the task coordinator. It uses the video description as context and issues a prompt to the OpenAI model.\n* **🧾 Comment Writer Model** is your **LLM** (like GPT-4 or GPT-3.5) that intelligently crafts a human-like, thoughtful comment that aligns with the content.\n\n> 💡 **Purpose**: Generate comments that feel organic, contextual, and engaging — potentially increasing visibility and interaction.\n\n---\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "e903ead7-d85e-4ef9-84d7-bd069a5d2af9",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        -580
      ],
      "parameters": {
        "color": 3,
        "width": 280,
        "height": 780,
        "content": "## 🟦 **Section 3: 📤 Comment Deployment**\n\n### Nodes:\n\n* 📬 **Post Comment** (HTTP Request1)\n\n### 🚀 Description:\n\nThis group is responsible for **publishing the AI-generated comment** directly on the video.\n\n* **📬 Post Comment** makes a POST request to the YouTube Data API, attaching the comment and video ID to publish it publicly.\n\n> 💡 **Purpose**: Automate the act of responding to fresh videos without human involvement.\n\n---\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "5e2d1a7f-b405-44ec-817a-68c509bcc5b5",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1540,
        -580
      ],
      "parameters": {
        "color": 4,
        "width": 1300,
        "height": 320,
        "content": "=======================================\n            WORKFLOW ASSISTANCE\n=======================================\nFor any questions or support, please contact:\n    Yaron@nofluff.online\n\nExplore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n=======================================\n"
      },
      "typeVersion": 1
    },
    {
      "id": "63e86a55-daf1-4b64-a2e5-94e9526627dd",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1540,
        -240
      ],
      "parameters": {
        "color": 4,
        "width": 1289,
        "height": 1838,
        "content": "## 🟩 **Section 1: 🎯 Video Discovery**\n\n### Nodes:\n\n* 🕒 **Check for New Video** (Schedule Trigger)\n* ✏️ **Set Channel ID** (Edit Fields)\n* 🌐 **Fetch Latest Video** (HTTP Request)\n\n### 🔍 Description:\n\nThis group handles **detecting and fetching the latest video** from a specific YouTube channel.\n\n* **🕒 Schedule Trigger** runs at regular intervals (e.g., every hour) to check for new content.\n* **✏️ Set Channel ID** allows you to manually configure or dynamically inject the channel ID to target.\n* **🌐 Fetch Latest Video** calls the YouTube Data API (GET request) to pull metadata about the most recent upload — primarily the video ID and description.\n\n> 💡 **Purpose**: Ensures you always get the freshest video from the target channel to react to.\n\n---\n\n## 🟨 **Section 2: 🤖 Comment Creation**\n\n### Nodes:\n\n* 🧠 **Generate Comment** (AI Agent)\n* 🧾 **Comment Writer Model** (OpenAI Chat Model)\n\n### ✍️ Description:\n\nThis is where the **magic happens** — the AI reads the video’s description and writes a relevant, engaging comment.\n\n* **🧠 Generate Comment (AI Agent)** acts as the task coordinator. It uses the video description as context and issues a prompt to the OpenAI model.\n* **🧾 Comment Writer Model** is your **LLM** (like GPT-4 or GPT-3.5) that intelligently crafts a human-like, thoughtful comment that aligns with the content.\n\n> 💡 **Purpose**: Generate comments that feel organic, contextual, and engaging — potentially increasing visibility and interaction.\n\n---\n\n## 🟦 **Section 3: 📤 Comment Deployment**\n\n### Nodes:\n\n* 📬 **Post Comment** (HTTP Request1)\n\n### 🚀 Description:\n\nThis group is responsible for **publishing the AI-generated comment** directly on the video.\n\n* **📬 Post Comment** makes a POST request to the YouTube Data API, attaching the comment and video ID to publish it publicly.\n\n> 💡 **Purpose**: Automate the act of responding to fresh videos without human involvement.\n\n---\n\n## 🧩 Optional Enhancements (Future Groups):\n\n* 📦 **Group: Logging & History**\n\n  * Store each video ID + timestamp + posted comment in a DB (e.g., PostgreSQL or Google Sheets).\n* 🔐 **Group: Authentication**\n\n  * Manage OAuth2 token refreshing and storage for YouTube API access.\n\n---\n\n### 📌 Summary Visual:\n\n```\n🟩 Group 1: 🎯 Video Discovery\n  └── 🕒 Schedule → ✏️ Channel ID → 🌐 Fetch Video\n\n🟨 Group 2: 🤖 Comment Creation\n  └── 🧠 AI Agent → 🧾 OpenAI Model\n\n🟦 Group 3: 📤 Comment Deployment\n  └── 📬 Post Comment\n```\n\n\n"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "507bae91-627c-44ae-89d5-0e05a607152e",
  "connections": {
    "Comment Writer": {
      "ai_languageModel": [
        [
          {
            "node": "Commenter Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Set Channel ID": {
      "main": [
        [
          {
            "node": "Fetch Latest Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Commenter Agent": {
      "main": [
        [
          {
            "node": "Post Comment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Latest Video": {
      "main": [
        [
          {
            "node": "Commenter Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for New Video": {
      "main": [
        [
          {
            "node": "Set Channel ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}