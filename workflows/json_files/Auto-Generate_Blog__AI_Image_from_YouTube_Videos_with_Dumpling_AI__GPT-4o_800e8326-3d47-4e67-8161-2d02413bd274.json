{
  "id": "kyDSmFJkvi8CYHh2",
  "meta": {
    "instanceId": "a1ae5c8dc6c65e674f9c3947d083abcc749ef2546dff9f4ff01de4d6a36ebfe6",
    "templateCredsSetupCompleted": true
  },
  "name": "Auto-Generate Blog & AI Image from YouTube Videos with Dumpling AI & GPT-4o",
  "tags": [],
  "nodes": [
    {
      "id": "7847f8a8-a60e-4b2c-afa1-8d586cb42d5c",
      "name": "Watch Folder for New YouTube Videos",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "position": [
        -2960,
        -420
      ],
      "parameters": {
        "event": "fileCreated",
        "options": {},
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "mode": "list",
          "value": "",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1mde_V0ePcJEebVydygVKT7GDiABjj2A4",
          "cachedResultName": "Youtube Videos"
        }
      },
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "B0Hulh0j065xznhI",
          "name": "Google Drive account 2"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "cee77d1b-a91a-4fae-b5ae-eac34a9b0a03",
      "name": "Download Video File",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        -2740,
        -420
      ],
      "parameters": {
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "options": {},
        "operation": "download"
      },
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "B0Hulh0j065xznhI",
          "name": "Google Drive account 2"
        }
      },
      "typeVersion": 3
    },
    {
      "id": "7b5ae3f4-d89d-4506-985d-a4c2afc5c0f5",
      "name": "Convert Downloaded Video to Base64",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -2520,
        -420
      ],
      "parameters": {
        "options": {},
        "operation": "binaryToPropery"
      },
      "typeVersion": 1
    },
    {
      "id": "e94c073a-e8e3-4b7e-9b86-21f7568b98cb",
      "name": "Transcribe Video with Dumpling AI (Full Transcript)",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2300,
        -420
      ],
      "parameters": {
        "url": "https://app.dumplingai.com/api/v1/extract-video",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"inputMethod\": \"base64\",\n  \"video\": \"{{ $json.data }}\",\n  \"prompt\": \"Please transcribe the entire audio content of this video. I need a clear, complete, and accurate transcript of everything that was said, without summarizing or skipping any part. Include all spoken words, even fillers or pauses like 'um' or 'uh', if present. Format the transcript in clean readable text, broken into paragraphs where appropriate.\",\n  \"jsonMode\": \"false\"\n}\n",
        "sendBody": true,
        "specifyBody": "json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth"
      },
      "credentials": {
        "httpBasicAuth": {
          "id": "ZqOKe2AhRqsTlTR1",
          "name": "n8n connections"
        },
        "httpHeaderAuth": {
          "id": "RLFzAcGRepr5eXZB",
          "name": "n8n"
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "29e09351-0d8e-40c4-8a41-d00bff9e93a4",
      "name": "Generate Blog & Image Prompt using GPT-4o",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        -2080,
        -420
      ],
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o",
          "cachedResultName": "GPT-4O"
        },
        "options": {},
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "=You are an experienced blog writer and creative AI assistant. Based on the transcript I will provide, generate:\n\nA blog post that summarizes and expands on the key message of the video in a clear, engaging, and human tone.\n\nAn image prompt for AI image generation that visually supports the content of the blog post.\n\nBlog Post Guidelines:\n\nThe blog post should be written in a natural and conversational tone.\n\nIt must start with a strong opening paragraph that hooks the reader.\n\nFollow with 2 to 4 short paragraphs that explain or expand on the main ideas in the transcript.\n\nEnd with a clear conclusion or takeaway that wraps up the message or encourages readers to take action.\n\nDo not use overly technical or robotic language. Keep it clear and useful for the average reader.\n\nImage Prompt Guidelines:\n\nCreate a short, descriptive image prompt that visually represents the core message of the blog.\n\nThe image prompt should be suitable for AI image generation models like \nFLUX.1-pro.\n\nIt should be visually specific, using descriptive words that reflect the theme and tone of the blog.\n\nReturn your response in this exact JSON format:\n\n{\n  \"blog_post\": \"Your full blog content here\",\n  \"image_prompt\": \"Your image generation prompt here\"\n}"
            },
            {
              "content": "=Here is the transcript to work with:[{{ $json.results }} ] "
            }
          ]
        },
        "jsonOutput": true
      },
      "credentials": {
        "openAiApi": {
          "id": "fdhWALG84tBLgSZT",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.8
    },
    {
      "id": "d68ab832-0c22-4ee7-8406-f1aba6911f70",
      "name": "Generate Visual from Blog Prompt with Dumpling AI",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1700,
        -420
      ],
      "parameters": {
        "url": "https://app.dumplingai.com/api/v1/generate-ai-image",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"model\": \"FLUX.1-pro\",\n  \"input\": {\n    \"prompt\": \"{{ $json.message.content.image_prompt }}\",\n    \"width\": 1024,\n    \"height\": 576,\n    \"aspect_ratio\": \"16:9\"\n  }\n}\n",
        "sendBody": true,
        "specifyBody": "json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth"
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "RLFzAcGRepr5eXZB",
          "name": "n8n"
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "34b5a7a2-2cab-49a4-a905-dd6611de33f1",
      "name": "Save Blog Post to Airtable",
      "type": "n8n-nodes-base.airtable",
      "position": [
        -1480,
        -420
      ],
      "parameters": {
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "",
          "cachedResultUrl": "https://airtable.com/appPSvSKdA6075xJC",
          "cachedResultName": "Testing n8n"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "",
          "cachedResultUrl": "https://airtable.com/appPSvSKdA6075xJC/tblboiRp54hqA813K",
          "cachedResultName": "social post"
        },
        "columns": {
          "value": {
            "Content": "={{ $('Generate Blog & Image Prompt using GPT-4o').item.json.message.content.blog_post }}"
          },
          "schema": [
            {
              "id": "ID",
              "type": "string",
              "display": true,
              "removed": true,
              "readOnly": true,
              "required": false,
              "displayName": "ID",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "Content",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Attachments",
              "type": "array",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "Attachments",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "create"
      },
      "credentials": {
        "airtableTokenApi": {
          "id": "H8PVkBgUPCcUhhRC",
          "name": "Airtable Personal Access Token account"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "cc6c3c98-d639-4bd4-b727-3556e33c3397",
      "name": "Upload Blog post Image to Airtable",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1260,
        -420
      ],
      "parameters": {
        "url": "=https://api.airtable.com/v0///{{ $json.id }}",
        "method": "PATCH",
        "options": {},
        "jsonBody": "={\n  \"fields\": {\n    \"Attachments\": [\n      {\n        \"url\": \"{{ $('Generate Blog & Image Prompt using GPT-4o').item.json.message.content.image_prompt }}\"\n      }\n    ]\n  }\n}\n",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headerParameters": {
          "parameters": [
            {}
          ]
        }
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "VyzU59iFznTo7K6r",
          "name": "Airtable Connection"
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "aa4fb418-c654-413e-986f-df5bad418703",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2960,
        -620
      ],
      "parameters": {
        "width": 700,
        "height": 240,
        "content": "### 🎥 From Video Upload to Blog Prompt\n\nThis part of the workflow starts when a new video is added to a designated Google Drive folder. It downloads the video and converts it into base64 format. That base64 video is then sent to Dumpling AI’s `extract-video` endpoint, which transcribes the entire audio content. The transcription is passed to GPT-4o, which writes a full blog post and also creates a descriptive image prompt based on the video's message.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "8a379ab7-b7ba-409f-a072-c3e0c7e20f7e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2040,
        -620
      ],
      "parameters": {
        "width": 820,
        "height": 260,
        "content": "### 📝 Generate Image and Save Blog to Airtable\n\nThe AI-generated image prompt is sent to Dumpling AI’s `generate-ai-image` endpoint (model FLUX.1-pro) to produce a visual that aligns with the blog post. The blog content is stored in Airtable under the `Content` field. Finally, the image prompt is also patched into the Airtable record under `Attachments` to complete the post entry for social use or publishing.\n"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "41c42227-95ae-4535-be56-1cc8a71490ac",
  "connections": {
    "Download Video File": {
      "main": [
        [
          {
            "node": "Convert Downloaded Video to Base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Blog Post to Airtable": {
      "main": [
        [
          {
            "node": "Upload Blog post Image to Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert Downloaded Video to Base64": {
      "main": [
        [
          {
            "node": "Transcribe Video with Dumpling AI (Full Transcript)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Watch Folder for New YouTube Videos": {
      "main": [
        [
          {
            "node": "Download Video File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Blog & Image Prompt using GPT-4o": {
      "main": [
        [
          {
            "node": "Generate Visual from Blog Prompt with Dumpling AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Visual from Blog Prompt with Dumpling AI": {
      "main": [
        [
          {
            "node": "Save Blog Post to Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Video with Dumpling AI (Full Transcript)": {
      "main": [
        [
          {
            "node": "Generate Blog & Image Prompt using GPT-4o",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}